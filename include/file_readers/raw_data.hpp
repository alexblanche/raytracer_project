#pragma once

#include <vector>
#include "screen/color.hpp"

/* Creates a file file_name, and writes in it the resolution of the image, the number of rays used to generate it,
   and the raw data of the matrix
   Returns true if the operation was successful */
/* Format:

   width:1366 height:768
   number_of_rays:10
   2550.0000000000 2000.0000000000 1367.4666666666
   ...
   
   width * height of 3 doubles separated by spaces,
   pixel (i,j) at line j*width + i
   line k representing pixel (k % width, k / width)
*/
bool export_raw(const char* file_name, const unsigned int number_of_rays, std::vector<std::vector<rt::color>>& matrix);

/* Reads a file file_name generated by export_raw, and returns a matrix with its content
   Returns true if the operation was successful */
std::vector<std::vector<rt::color>>& read_raw(const char* file_name, bool& success);

/* Combines the n files whose names are in the array source_file_names into one bmp file dest_file_name
   Returns true if the operation was successful */
bool combine_raw(const char* dest_file_name, const int n, const char* const source_file_names[]);
